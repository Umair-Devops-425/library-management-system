name: Build and Test with Docker Compose

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build with Docker Compose
      run: |
        docker-compose -f docker-compose.yml build

    - name: Test with Docker Compose
      run: |
        docker-compose -f docker-compose.yml up -d
        sleep 30  # Wait for services to start
        docker-compose ps
        # Test if Flask app is responding
        curl -f http://localhost:5000/ || exit 1
        docker-compose down

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Generate image tag
      id: tag
      run: |
        COMMIT_SHA_SHORT=$(git rev-parse --short HEAD)
        DATE=$(date +'%Y%m%d')
        echo "TAG=$DATE-$COMMIT_SHA_SHORT" >> $GITHUB_OUTPUT
        echo "Tag: $DATE-$COMMIT_SHA_SHORT"

    - name: Build and push Flask app image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/lms-app:${{ steps.tag.outputs.TAG }}
          ${{ secrets.DOCKERHUB_USERNAME }}/lms-app:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push MySQL image with schema
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.mysql
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/lms-mysql:${{ steps.tag.outputs.TAG }}
          ${{ secrets.DOCKERHUB_USERNAME }}/lms-mysql:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Update deployment images
      run: |
        echo "Images pushed successfully:"
        echo "- ${{ secrets.DOCKERHUB_USERNAME }}/lms-app:${{ steps.tag.outputs.TAG }}"
        echo "- ${{ secrets.DOCKERHUB_USERNAME }}/lms-mysql:${{ steps.tag.outputs.TAG }}"