name: Build and Test with Docker Compose

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:    # Manual trigger

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Generate image tag
      id: tag
      run: |
        COMMIT_SHA_SHORT=$(git rev-parse --short HEAD)
        DATE=$(date +'%Y%m%d')
        echo "TAG=$DATE-$COMMIT_SHA_SHORT" >> $GITHUB_OUTPUT
        echo "Building image: ${{ secrets.DOCKERHUB_USERNAME }}/lms-app:$DATE-$COMMIT_SHA_SHORT"

    - name: Build Flask app image
      run: |
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/lms-app:${{ steps.tag.outputs.TAG }} \
                     -t ${{ secrets.DOCKERHUB_USERNAME }}/lms-app:latest \
                     -t lms:latest \
                     -f Dockerfile .

    - name: Build MySQL image with schema
      run: |
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/lms-mysql:${{ steps.tag.outputs.TAG }} \
                     -t ${{ secrets.DOCKERHUB_USERNAME }}/lms-mysql:latest \
                     -f Dockerfile.mysql ./db

    - name: Test with Docker Compose
      run: |
        # Use the locally built image
        docker-compose -f docker-compose.yml up -d
        
        # Wait for services to be healthy
        echo "Waiting for services to start..."
        sleep 30
        
        # Check service status
        docker-compose ps
        
        # Test Flask app
        echo "Testing Flask app..."
        for i in {1..10}; do
          if curl -f http://localhost:5000/; then
            echo "✓ App is responding!"
            break
          fi
          echo "Attempt $i: App not ready yet, waiting..."
          sleep 5
        done
        
        # Show logs
        echo "Flask app logs:"
        docker-compose logs app
        
        echo "MySQL logs:"
        docker-compose logs mysql
        
        # Cleanup
        docker-compose down

    - name: Log in to Docker Hub
      if: success()
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Push Flask app image
      if: success()
      run: |
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/lms-app:${{ steps.tag.outputs.TAG }}
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/lms-app:latest

    - name: Push MySQL image
      if: success()
      run: |
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/lms-mysql:${{ steps.tag.outputs.TAG }}
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/lms-mysql:latest

    - name: Deployment summary
      if: success()
      run: |
        echo "✓ Images built and pushed successfully:"
        echo "  Flask App:"
        echo "    - ${{ secrets.DOCKERHUB_USERNAME }}/lms-app:${{ steps.tag.outputs.TAG }}"
        echo "    - ${{ secrets.DOCKERHUB_USERNAME }}/lms-app:latest"
        echo "  MySQL:"
        echo "    - ${{ secrets.DOCKERHUB_USERNAME }}/lms-mysql:${{ steps.tag.outputs.TAG }}"
        echo "    - ${{ secrets.DOCKERHUB_USERNAME }}/lms-mysql:latest"